'''
[문제]
- 크리보드에는 버튼이 4개만 있다.
    1. 화면에 A를 출력한다.
    2. Ctrl-A: 화면을 전체 선택한다.
    3. Ctrl-C: 전체 선택한 내용을 버퍼에 복사한다.
    4. Ctrl-V: 버퍼에 있는 내용을 화면에 출력한다.
- 크리보드의 버튼 중 총 N번 눌러서 화면에 출력된 A개수를 최대로 하는 프로그램을 작성하시오.

[점화식]
- dp[i] = max(dp[i - 3] * 2, max(dp[i - 4] * 3, dp[i - 5] * 4))
    -> 1에서 6까지는 A를 복사하는 경우보다 A를 입력하는 것이 더 많은 A를 출력한다.
    -> 7부터는 A를 복사하는 것이 더 많은 A를 출력한다.
        - A를 3개 출력하고 복사하는 경우
        - A를 2개 출력하고 복사하는 경우
        - A를 1개 출력하고 복사하는 경우
    -> 붙여넣기는 4번 이상 하지 않아도 된다. 3번만 해도 최대로 만들 수 있다.
        (https://blog.naver.com/mym0404/222323009491)
'''
from pprint import pprint

n = int(input())

# 참고한 코드
def ref_sol():
    dp = [a for a in range(102)]
    
    for i in range(7, 101):
        # v를 1번 누른 경우, 2번 누른 경우, 3번 누른 경우
        # 1번 누르기 : 기존 출력된 것에 붙여넣기를 하므로 곱하기 2(기존 + 붙여넣기 1번 = 2번)
        # 2번 누르기 : 기존 출력된 것에 붙여넣기를 하므로 곱하기 3(기존 + 붙여넣기 2번 = 3번)
        # 3번 누르기 : 기존 출력된 것에 붙여넣기를 하므로 곱하기 4(기존 + 붙여넣기 3번 = 4번)
        dp[i] = max(dp[i - 3] * 2, max(dp[i - 4] * 3, dp[i - 5] * 4))
    
    print(dp[n])
    
# 실패 코드
def my_sol():
    # dp[i][j]: i번째 버튼을 눌렀을 때, 버튼의 종류 j일 때 출력된 A의 개수
    dp = [[0] * 4 for _ in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(4):
            # 화면에 A를 출력한다.
            if j == 0: 
                dp[i][j] += dp[i - 1][j] + 1
                
            # Ctrl-A: 화면을 전체 선택한다.
            # (이전 버튼이 화면에 A를 출력한 경우만 가능)
            if j == 1: 
                dp[i][j] += dp[i - 1][0]
                
            # Ctrl-C: 전체 선택한 내용을 버퍼에 복사한다.
            # (이전 버튼이 화면을 전체 선택한 경우만 가능)
            elif j == 2: 
                dp[i][j] = dp[i - 1][1]
                
            # Ctrl-V: 버퍼에 있는 내용을 화면에 출력한다.
            # (이전 버튼이 Ctrl-C를 누른 경우만 가능)
            elif j == 3: 
                if dp[i - 1][2] != 0:
                    dp[i][j] += dp[i - 2][0] + dp[i - 1][2]

ref_sol()