'''
1) 현재 자리숫자가 0 보다 클 때 -> 이전 dp 값을 더한다. ( 이전 dp 가 가지는 방법들 뒤에 한 자리수로 추가하기만 하면 되므로 이전 dp값을 default로 가질 수 있다. )
예) 2 5 1 1 4 에서 빨강색까지는 이미 구했다고 하자. 2  5  1  1 / 25  1  1 / 2  5  11 / 25  11 이렇게 4가지의 방법 뒤에 4를 독립적으로(한자리수로 생각) 붙힐 수 있으므로 4가지를 더할 수 있다.
2) 이전 자리수와 현재 자리수를 두 자리숫자로 볼 때 10~26사이의 숫자에 해당할 때 -> 전 전 dp 값을 더한다.
예) 2 5 1 1 4 에서 빨강색까지의 방법 -> 2  5  1 / 25  1 에다가 독립적으로 14를 붙힐 수 있으므로 2 가지를 더할 수 있다.
이렇게 두 가지 조건문을 달면 된다.
그리고 처음 숫자가 0으로 시작하는 것은 10, 20으로도 만들 수 없으므로 아예 0으로 출력해주는 예외를 추가해주면 된다.

'''


n = list(map(int, input()))
l = len(n)
dp = [0 for _ in range(l+1)]
if (n[0] == 0):
    print("0")
else:
    n = [0] + n
    dp[0] = dp[1] = 1
    for i in range(2, l+1):
        if n[i] > 0:
            dp[i] += dp[i-1]
        temp = n[i-1] * 10 + n[i]
        if temp >= 10 and temp <= 26:
            dp[i] += dp[i-2]
    print(dp[l] % 1000000)
