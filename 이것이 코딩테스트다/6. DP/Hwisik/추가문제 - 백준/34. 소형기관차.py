'''
[문제]
- 기관차 1대가 손님이 탄 객차 여러 칸을 끌고 간다.
- 기관차 고장에 대비하여 소형 기관차 3대를 배치하기로 한다. 소형 기관차는 기관차보다 훨씬 적은 수의 객차만을 끌 수 있다.
- 객차 모두를 소형 기관차 3대가 나누어 끌 수 없기 때문에, 소형 기관차들이 어떤 객차들을 끌고 갈지 정하기로 한다.
    1. 소형 기관차가 최대로 끌 수 있는 객차의 수를 미리 정해 놓고, 그보다 많은 수의 객차를 끌게 하지 않는다. 3대의 소형 기관차가 최대로 끌 수 있는 객차의 수는 서로 같다.
    2. 소형 기관차 3대를 이용하여 최대한 많은 손님을 운송하도록 한다. 각 객차 마다 타고 있는 손님의 수는 미리 알고 있고, 다른 객차로 손님들이 이동하는 것은 불가능하다.
    3. 각 소형 기관차는 번호가 연속적으로 이어진 객차를 끌게 한다. 객차는 기관차 바로 뒤에 있는 객차부터 시작하여 1번부터 차례로 번호가 붙어있다.
- 소형 기관차 3대를 이용하여 최대로 운송할 수 있는 손님 수를 구하라.

[점화식]
- 

✅ 답 참고, 다시 풀기
'''

n = int(input())
guests = list(map(int, input().split()))
max_n = int(input())

s = [0]
for guest in guests:
    s.append(s[-1] + guest)

dp = [[0] * (n + 1) for _ in range(4)]

for i in range(1, 4):
    for j in range(i * max_n, n + 1):
        if i == 1:
            # 소형 기관차 1대 끌 경우 -> 최대로 끌 수 있는 객차 수만큼 끌기(=> 구간합 비교)
            dp[i][j] = max(dp[i][j - 1], s[j] - s[j - max_n])
        else:
            # 현재 객차를 포함하지 않는 경우 and 포함하는 경우
            dp[i][j] = max(dp[i][j - 1], dp[i - 1][j - max_n] + s[j] - s[j - max_n])

print(dp[3][n])