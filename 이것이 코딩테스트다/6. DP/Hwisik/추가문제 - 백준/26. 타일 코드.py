'''
[문제]
- 2xN 크기의 판을 1 * 2(또는 2 * 1)크기와 2*2 크기의 타일로 채우려고 한다.
- 여러 가지 경우가 있을 수 있으므로, 각각을 하나의 코드로 대응시켜서 암호화에 이용한다.
- 좌우 대칭을 이루는 표현은 한 가지 경우로만 처리한다.

[점화식]
- dp[i] = dp[i - 1] + dp[i - 2] * 2
    -> 좌우 대칭인 타일도 포함한 경우의 수
    
- 뒤집었을 때 좌우 대칭이 아닌, 처음부터 좌우 대칭인 경우의 수를 더해서 2로 나눠주면,
    중복된 경우의 수를 제외한 경우의 수가 나온다.
    
✅ 다시 풀기
'''

n = int(input())

dp = [0] * (31)
dp[0] = dp[1] = 1

for i in range(2, n + 1):
    dp[i] = dp[i - 1] + dp[i - 2] * 2

ret = 0

if n % 2 != 0:
    ret = (dp[n] + dp[(n - 1) // 2]) // 2
else:
    ret = (dp[n] + dp[n // 2] + dp[(n - 2) // 2] * 2) // 2

print(ret)