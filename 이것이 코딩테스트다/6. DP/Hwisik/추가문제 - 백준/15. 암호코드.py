'''
[문제]
- A - Z까지의 알파벳으로 구성된 문자열이 주어질 때, 이 문자열을 암호화하는 방법은 여러 가지가 있다.
- A를 1, B를 2, ..., Z를 26으로 하는 암호화 방법이 있다.
- 어떤 암호가 주어졌을 때, 이 암호의 해석이 몇 가지가 있는지 구하는 프로그램을 작성하시오.
- 예를 들어, 25114는 다음의 6가지 방법으로 해석될 수 있다.
    - "BEAAD", "YAAD", "YAN", "YKD", "BEKD", "BEAN" => 총 6가지

[점화식]
- dp[i] :
    - += dp[i - 1] if code[i - 1] != '0'
    = ++ dp[i - 2]
'''

code = input()

n = len(code)
MOD = 1_000_000

# dp[i] : i번째까지의 암호 해석 방법의 수
dp = [0] * (n + 1)

# 디폴트 값
dp[0] = 1 

# 점화식(1-index)
for i in range(1, n + 1):
    # 1자리 숫자
    if code[i - 1] != '0':
        dp[i] += dp[i - 1]
    # 이전 숫자를 포함해서 2자리 숫자
    if i > 1 and code[i - 2] != '0' and int(code[i - 2:i]) <= 26:
        dp[i] += dp[i - 2]

# 출력
print(dp[n] % MOD)